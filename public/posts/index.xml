<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Theddy Dev Space</title>
    <link>https://theddy.dev/posts/</link>
    <description>Recent content in Posts on Theddy Dev Space</description>
    <generator>Hugo -- 0.151.0</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 09 Oct 2025 18:15:00 +0300</lastBuildDate>
    <atom:link href="https://theddy.dev/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Demystifying Kubernetes `controller-runtime`</title>
      <link>https://theddy.dev/posts/controller-runtime/</link>
      <pubDate>Thu, 09 Oct 2025 18:15:00 +0300</pubDate>
      <guid>https://theddy.dev/posts/controller-runtime/</guid>
      <description>&lt;p&gt;If you&amp;rsquo;re like me and just starting your Kubernetes journey, you&amp;rsquo;ll likely need to write an &lt;a href=&#34;https://kubernetes.io/docs/concepts/extend-kubernetes/operator/&#34;&gt;Operator&lt;/a&gt; to manage your &lt;a href=&#34;https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/&#34;&gt;custom resources&lt;/a&gt;. Kubernetes offers a high-level Go framework called &lt;a href=&#34;https://github.com/kubernetes-sigs/controller-runtime&#34;&gt;&lt;code&gt;controller-runtime&lt;/code&gt;&lt;/a&gt; for building such operators; frameworks like &lt;a href=&#34;https://book.kubebuilder.io/&#34;&gt;Kubebuilder&lt;/a&gt;  are built on top of it. What do I mean by custom resources? Well, anything that you would create which is not part of the Kubernetes well-known built-in resources - Pods, Deployments, ReplicaSets, etc. An example might be you adding a new custom &lt;code&gt;Backup&lt;/code&gt; resource whose main purpose is to do a scheduled cron job to upload backups to a desired target storage solution.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Terminal Emulators (&#43; Ghostty Setup)</title>
      <link>https://theddy.dev/posts/terminal-setup/</link>
      <pubDate>Wed, 23 Apr 2025 16:28:36 +0300</pubDate>
      <guid>https://theddy.dev/posts/terminal-setup/</guid>
      <description>&lt;p&gt;Lately, I‚Äôve been filling in some of the gaps in my software engineering knowledge. One random question that I had was this little message in my Terminal:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Last login: Sat Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt; 00:15:16 on ttys001
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;What does &lt;em&gt;ttys001&lt;/em&gt; even mean?&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-terminal-console-tty--whats-the-difference&#34;&gt;üñ•Ô∏è Terminal, Console, TTY ‚Äî What&amp;rsquo;s the Difference?&lt;/h2&gt;
&lt;p&gt;That question led me to explore how terminals actually work. I had always used the default Terminal app on macOS without giving it much thought. Now I know that on modern-day computers, we usually use the word terminal to refer to software programs known as terminal emulators:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
